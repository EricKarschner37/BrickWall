generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id       Int       @id @default(autoincrement())
  city     String
  state    String?
  country  String
  Companys Company[]
  Offers   Offer[]
}

model Company {
  id           Int         @id @default(autoincrement())
  name         String      @unique
  website      String      @unique
  logo         String?     @unique
  headquarters City?       @relation(fields: [cityId], references: [id])
  glassdoor    String?     @unique
  Interviews   Interview[]
  JobReviews   JobReview[]
  Offers       Offer[]
  Positions    Position[]
  cityId       Int?
}

model Position {
  id        Int         @id @default(autoincrement())
  company   Company     @relation(fields: [companyId], references: [id])
  title     String
  job_type  jobtype
  Interview Interview[]
  JobReview JobReview[]
  Offer     Offer[]
  companyId Int
}

model Interview {
  id              Int      @id @default(autoincrement())
  member          String
  company         Company  @relation(fields: [companyId], references: [id])
  position        Position @relation(fields: [positionId], references: [id])
  interviewcount  Int      @default(1)
  codingchallenge Boolean? @default(false)
  onsite          Boolean? @default(false)
  body            String?
  companyId       Int
  positionId      Int
}

model JobReview {
  id         Int       @id @default(autoincrement())
  member     String
  position   Position  @relation(fields: [positionId], references: [id])
  company    Company   @relation(fields: [companyId], references: [id])
  start_date DateTime
  end_date   DateTime?
  body       String?
  positionId Int
  companyId  Int
}

model Offer {
  id            Int       @id @default(autoincrement())
  member        String
  pay           Float
  paytype       paytype
  position      Position  @relation(fields: [positionId], references: [id])
  offerdate     DateTime?
  offerdeadline DateTime?
  housing       housing?
  stipend       Float?
  stocks        Float?
  signing_bonus Float?
  relocation    Float?
  location      City?     @relation(fields: [cityId], references: [id])
  remote        Boolean?  @default(false)
  company       Company   @relation(fields: [companyId], references: [id])
  body          String?
  positionId    Int
  cityId        Int?
  companyId     Int
}

enum housing {
  corporate
  stipend
}

enum jobtype {
  co_op
  full_time
}

enum paytype {
  hourly
  salary
}
